    1               /**
 * Creates a special structure for resolving CSS properties from plain CSS
 * snippets.
 * Almost all CSS snippets are aliases for real CSS properties with available
 * value variants, optionally separated by `|`. Most values are keywords that
 * can be fuzzy-resolved as well. Some CSS properties are shorthands for other,
 * more specific properties, like `border` and `border-style`. For such cases
 * keywords from more specific properties should be available in shorthands too.

 */COMMENT
    2               export              KEYWORD
    3               default             KEYWORD
    4               function            KEYWORD
    5               (                   BRACKET_LEFT
    6               snippets            VALUE
    7               )                   BRACKET_RIGHT
    8               {                   CURLY_LEFT
    9               return              KEYWORD
   10               nest                VALUE
   11               (                   BRACKET_LEFT
   12               snippets            VALUE
   13               .                   PERIOD
   14               map                 VALUE
   15               (                   BRACKET_LEFT
   16               snippet             VALUE
   17               =>                  ARROW
   18               new                 KEYWORD
   19               CSSSnippet          VALUE
   20               (                   BRACKET_LEFT
   21               snippet             VALUE
   22               .                   PERIOD
   23               key                 VALUE
   24               ,                   COMA
   25               snippet             VALUE
   26               .                   PERIOD
   27               value               VALUE
   28               )                   BRACKET_RIGHT
   29               )                   BRACKET_RIGHT
   30               )                   BRACKET_RIGHT
   31               ;                   SEMICOLON
   32               }                   CURLY_RIGHT
   33               export              KEYWORD
   34               class               KEYWORD
   35               CSSSnippet          VALUE
   36               {                   CURLY_LEFT
   37               const               KEYWORD
   38               ructor              VALUE
   39               (                   BRACKET_LEFT
   40               key                 VALUE
   41               ,                   COMA
   42               value               VALUE
   43               )                   BRACKET_RIGHT
   44               {                   CURLY_LEFT
   45               this                KEYWORD
   46               .                   PERIOD
   47               key                 VALUE
   48               =                   ASIGN
   49               key                 VALUE
   50               ;                   SEMICOLON
   51               this                KEYWORD
   52               .                   PERIOD
   53               value               VALUE
   54               =                   ASIGN
   55               value               VALUE
   56               ;                   SEMICOLON
   57               this                KEYWORD
   58               .                   PERIOD
   59               property            VALUE
   60               =                   ASIGN
   61               null                NULL
   62               ;                   SEMICOLON
   63               // detect if given snippet is a property
COMMENT
   64               const               KEYWORD
   65               m                   VALUE
   66               =                   ASIGN
   67               value               VALUE
   68               &&                  OPERATOR
   69               value               VALUE
   70               .                   PERIOD
   71               match               VALUE
   72               (                   BRACKET_LEFT
   73               reProperty          VALUE
   74               )                   BRACKET_RIGHT
   75               ;                   SEMICOLON
   76               if                  KEYWORD
   77               (                   BRACKET_LEFT
   78               m                   VALUE
   79               )                   BRACKET_RIGHT
   80               {                   CURLY_LEFT
   81               this                KEYWORD
   82               .                   PERIOD
   83               property            VALUE
   84               =                   ASIGN
   85               m                   VALUE
   86               [                   SQUARE_LEFT
   87               1                   NUMBER
   88               ]                   SQUARE_RIGHT
   89               ;                   SEMICOLON
   90               this                KEYWORD
   91               .                   PERIOD
   92               value               VALUE
   93               =                   ASIGN
   94               m                   VALUE
   95               [                   SQUARE_LEFT
   96               2                   NUMBER
   97               ]                   SQUARE_RIGHT
   98               ;                   SEMICOLON
   99               }                   CURLY_RIGHT
  100               this                KEYWORD
  101               .                   PERIOD
  102               dependencies        VALUE
  103               =                   ASIGN
  104               [                   SQUARE_LEFT
  105               ]                   SQUARE_RIGHT
  106               ;                   SEMICOLON
  107               }                   CURLY_RIGHT
  108               addDependency       VALUE
  109               (                   BRACKET_LEFT
  110               dep                 VALUE
  111               )                   BRACKET_RIGHT
  112               {                   CURLY_LEFT
  113               this                KEYWORD
  114               .                   PERIOD
  115               dependencies        VALUE
  116               .                   PERIOD
  117               push                VALUE
  118               (                   BRACKET_LEFT
  119               dep                 VALUE
  120               )                   BRACKET_RIGHT
  121               ;                   SEMICOLON
  122               }                   CURLY_RIGHT
  123               get                 VALUE
  124               default             KEYWORD
  125               Value               VALUE
  126               (                   BRACKET_LEFT
  127               )                   BRACKET_RIGHT
  128               {                   CURLY_LEFT
  129               return              KEYWORD
  130               this                KEYWORD
  131               .                   PERIOD
  132               value               VALUE
  133               !=                  OPERATOR
  134               null                NULL
  135               ?                   OPERATOR
  136               splitValue          VALUE
  137               (                   BRACKET_LEFT
  138               this                KEYWORD
  139               .                   PERIOD
  140               value               VALUE
  141               )                   BRACKET_RIGHT
  142               [                   SQUARE_LEFT
  143               0                   NUMBER
  144               ]                   SQUARE_RIGHT
  145               :                   COLON
  146               null                NULL
  147               ;                   SEMICOLON
  148               }                   CURLY_RIGHT
  149               /**
     * Returns list of unique keywords for current CSS snippet and its dependencies
     * @return {String[]}
     */COMMENT
  150               keywords            VALUE
  151               (                   BRACKET_LEFT
  152               )                   BRACKET_RIGHT
  153               {                   CURLY_LEFT
  154               const               KEYWORD
  155               stack               VALUE
  156               =                   ASIGN
  157               [                   SQUARE_LEFT
  158               ]                   SQUARE_RIGHT
  159               ;                   SEMICOLON
  160               const               KEYWORD
  161               keywords            VALUE
  162               =                   ASIGN
  163               new                 KEYWORD
  164               Set                 VALUE
  165               (                   BRACKET_LEFT
  166               )                   BRACKET_RIGHT
  167               ;                   SEMICOLON
  168               let                 KEYWORD
  169               i                   VALUE
  170               =                   ASIGN
  171               0                   NUMBER
  172               ,                   COMA
  173               item                VALUE
  174               ,                   COMA
  175               candidates          VALUE
  176               ;                   SEMICOLON
  177               if                  KEYWORD
  178               (                   BRACKET_LEFT
  179               this                KEYWORD
  180               .                   PERIOD
  181               property            VALUE
  182               )                   BRACKET_RIGHT
  183               {                   CURLY_LEFT
  184               // scan valid CSS-properties only
COMMENT
  185               stack               VALUE
  186               .                   PERIOD
  187               push                VALUE
  188               (                   BRACKET_LEFT
  189               this                KEYWORD
  190               )                   BRACKET_RIGHT
  191               ;                   SEMICOLON
  192               }                   CURLY_RIGHT
  193               while               KEYWORD
  194               (                   BRACKET_LEFT
  195               i                   VALUE
  196               <                   OPERATOR
  197               stack               VALUE
  198               .                   PERIOD
  199               length              VALUE
  200               )                   BRACKET_RIGHT
  201               {                   CURLY_LEFT
  202               // NB Keep items in stack instead of push/pop to avoid possible
COMMENT
  203               // circular references
COMMENT
  204               item                VALUE
  205               =                   ASIGN
  206               stack               VALUE
  207               [                   SQUARE_LEFT
  208               i                   VALUE
  209               +                   OPERATOR
  210               +                   OPERATOR
  211               ]                   SQUARE_RIGHT
  212               ;                   SEMICOLON
  213               if                  KEYWORD
  214               (                   BRACKET_LEFT
  215               item                VALUE
  216               .                   PERIOD
  217               value               VALUE
  218               )                   BRACKET_RIGHT
  219               {                   CURLY_LEFT
  220               candidates          VALUE
  221               =                   ASIGN
  222               splitValue          VALUE
  223               (                   BRACKET_LEFT
  224               item                VALUE
  225               .                   PERIOD
  226               value               VALUE
  227               )                   BRACKET_RIGHT
  228               .                   PERIOD
  229               filter              VALUE
  230               (                   BRACKET_LEFT
  231               isKeyword           VALUE
  232               )                   BRACKET_RIGHT
  233               ;                   SEMICOLON
  234               // extract possible keywords from snippet value
COMMENT
  235               for                 KEYWORD
  236               (                   BRACKET_LEFT
  237               let                 KEYWORD
  238               j                   VALUE
  239               =                   ASIGN
  240               0                   NUMBER
  241               ;                   SEMICOLON
  242               j                   VALUE
  243               <                   OPERATOR
  244               candidates          VALUE
  245               .                   PERIOD
  246               length              VALUE
  247               ;                   SEMICOLON
  248               j                   VALUE
  249               +                   OPERATOR
  250               +                   OPERATOR
  251               )                   BRACKET_RIGHT
  252               {                   CURLY_LEFT
  253               keywords            VALUE
  254               .                   PERIOD
  255               add                 VALUE
  256               (                   BRACKET_LEFT
  257               candidates          VALUE
  258               [                   SQUARE_LEFT
  259               j                   VALUE
  260               ]                   SQUARE_RIGHT
  261               .                   PERIOD
  262               trim                VALUE
  263               (                   BRACKET_LEFT
  264               )                   BRACKET_RIGHT
  265               )                   BRACKET_RIGHT
  266               ;                   SEMICOLON
  267               }                   CURLY_RIGHT
  268               // add dependencies into scan stack
COMMENT
  269               for                 KEYWORD
  270               (                   BRACKET_LEFT
  271               let                 KEYWORD
  272               j                   VALUE
  273               =                   ASIGN
  274               0                   NUMBER
  275               ,                   COMA
  276               deps                VALUE
  277               =                   ASIGN
  278               item                VALUE
  279               .                   PERIOD
  280               dependencies        VALUE
  281               ;                   SEMICOLON
  282               j                   VALUE
  283               <                   OPERATOR
  284               deps                VALUE
  285               .                   PERIOD
  286               length              VALUE
  287               ;                   SEMICOLON
  288               j                   VALUE
  289               +                   OPERATOR
  290               +                   OPERATOR
  291               )                   BRACKET_RIGHT
  292               {                   CURLY_LEFT
  293               if                  KEYWORD
  294               (                   BRACKET_LEFT
  295               stack               VALUE
  296               .                   PERIOD
  297               in                  KEYWORD
  298               dexOf               VALUE
  299               (                   BRACKET_LEFT
  300               deps                VALUE
  301               [                   SQUARE_LEFT
  302               j                   VALUE
  303               ]                   SQUARE_RIGHT
  304               )                   BRACKET_RIGHT
  305               ===                 OPERATOR
  306               -                   OPERATOR
  307               1                   NUMBER
  308               )                   BRACKET_RIGHT
  309               {                   CURLY_LEFT
  310               stack               VALUE
  311               .                   PERIOD
  312               push                VALUE
  313               (                   BRACKET_LEFT
  314               deps                VALUE
  315               [                   SQUARE_LEFT
  316               j                   VALUE
  317               ]                   SQUARE_RIGHT
  318               )                   BRACKET_RIGHT
  319               ;                   SEMICOLON
  320               }                   CURLY_RIGHT
  321               }                   CURLY_RIGHT
  322               }                   CURLY_RIGHT
  323               }                   CURLY_RIGHT
  324               return              KEYWORD
  325               Array               VALUE
  326               .                   PERIOD
  327               from                VALUE
  328               (                   BRACKET_LEFT
  329               keywords            VALUE
  330               )                   BRACKET_RIGHT
  331               ;                   SEMICOLON
  332               }                   CURLY_RIGHT
  333               }                   CURLY_RIGHT
