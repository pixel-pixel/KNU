   1   MULTI_LINE_COMMENT
(* models one-dimensional cellular automaton on a circle of finite radius
   arrays are faked as Strings,
   X's respresent live cells, dots represent dead cells,
   no error checking is done *)

   2   KEYWORD
class

   3   CLASS_INDETIFIER
CellularAutomaton

   4   KEYWORD
in

   5   OBJECT_INDETIFIER
herits

   6   CLASS_INDETIFIER
IO

   7   PUNCTUATION
{

   8   OBJECT_INDETIFIER
population_map

   9   PUNCTUATION
:

  10   CLASS_INDETIFIER
String

  11   PUNCTUATION
;

  12   KEYWORD
in

  13   OBJECT_INDETIFIER
it

  14   PUNCTUATION
(

  15   OBJECT_INDETIFIER
map

  16   PUNCTUATION
:

  17   CLASS_INDETIFIER
String

  18   PUNCTUATION
)

  19   PUNCTUATION
:

  20   CLASS_INDETIFIER
SELF_TYPE

  21   PUNCTUATION
{

  22   PUNCTUATION
{

  23   OBJECT_INDETIFIER
population_map

  24   OPERATOR
<

  25   OPERATOR
-

  26   OBJECT_INDETIFIER
map

  27   PUNCTUATION
;

  28   OBJECT_INDETIFIER
self

  29   PUNCTUATION
;

  30   PUNCTUATION
}

  31   PUNCTUATION
}

  32   PUNCTUATION
;

  33   OBJECT_INDETIFIER
print

  34   PUNCTUATION
(

  35   PUNCTUATION
)

  36   PUNCTUATION
:

  37   CLASS_INDETIFIER
SELF_TYPE

  38   PUNCTUATION
{

  39   PUNCTUATION
{

  40   OBJECT_INDETIFIER
out_string

  41   PUNCTUATION
(

  42   OBJECT_INDETIFIER
population_map

  43   OPERATOR
.

  44   OBJECT_INDETIFIER
concat

  45   PUNCTUATION
(

  46   STRING
"
"

  47   PUNCTUATION
)

  48   PUNCTUATION
)

  49   PUNCTUATION
;

  50   OBJECT_INDETIFIER
self

  51   PUNCTUATION
;

  52   PUNCTUATION
}

  53   PUNCTUATION
}

  54   PUNCTUATION
;

  55   OBJECT_INDETIFIER
num_cells

  56   PUNCTUATION
(

  57   PUNCTUATION
)

  58   PUNCTUATION
:

  59   KEYWORD
In

  60   OBJECT_INDETIFIER
t

  61   PUNCTUATION
{

  62   OBJECT_INDETIFIER
population_map

  63   OPERATOR
.

  64   OBJECT_INDETIFIER
length

  65   PUNCTUATION
(

  66   PUNCTUATION
)

  67   PUNCTUATION
}

  68   PUNCTUATION
;

  69   OBJECT_INDETIFIER
cell

  70   PUNCTUATION
(

  71   OBJECT_INDETIFIER
position

  72   PUNCTUATION
:

  73   KEYWORD
In

  74   OBJECT_INDETIFIER
t

  75   PUNCTUATION
)

  76   PUNCTUATION
:

  77   CLASS_INDETIFIER
String

  78   PUNCTUATION
{

  79   OBJECT_INDETIFIER
population_map

  80   OPERATOR
.

  81   OBJECT_INDETIFIER
substr

  82   PUNCTUATION
(

  83   OBJECT_INDETIFIER
position

  84   PUNCTUATION
,

  85   INTEGER
1

  86   PUNCTUATION
)

  87   PUNCTUATION
}

  88   PUNCTUATION
;

  89   OBJECT_INDETIFIER
cell_left_neighbor

  90   PUNCTUATION
(

  91   OBJECT_INDETIFIER
position

  92   PUNCTUATION
:

  93   KEYWORD
In

  94   OBJECT_INDETIFIER
t

  95   PUNCTUATION
)

  96   PUNCTUATION
:

  97   CLASS_INDETIFIER
String

  98   PUNCTUATION
{

  99   KEYWORD
if

 100   OBJECT_INDETIFIER
position

 101   OPERATOR
=

 102   INTEGER
0

 103   KEYWORD
then

 104   OBJECT_INDETIFIER
cell

 105   PUNCTUATION
(

 106   OBJECT_INDETIFIER
num_cells

 107   PUNCTUATION
(

 108   PUNCTUATION
)

 109   OPERATOR
-

 110   INTEGER
1

 111   PUNCTUATION
)

 112   KEYWORD
else

 113   OBJECT_INDETIFIER
cell

 114   PUNCTUATION
(

 115   OBJECT_INDETIFIER
position

 116   OPERATOR
-

 117   INTEGER
1

 118   PUNCTUATION
)

 119   KEYWORD
fi

 120   PUNCTUATION
}

 121   PUNCTUATION
;

 122   OBJECT_INDETIFIER
cell_right_neighbor

 123   PUNCTUATION
(

 124   OBJECT_INDETIFIER
position

 125   PUNCTUATION
:

 126   KEYWORD
In

 127   OBJECT_INDETIFIER
t

 128   PUNCTUATION
)

 129   PUNCTUATION
:

 130   CLASS_INDETIFIER
String

 131   PUNCTUATION
{

 132   KEYWORD
if

 133   OBJECT_INDETIFIER
position

 134   OPERATOR
=

 135   OBJECT_INDETIFIER
num_cells

 136   PUNCTUATION
(

 137   PUNCTUATION
)

 138   OPERATOR
-

 139   INTEGER
1

 140   KEYWORD
then

 141   OBJECT_INDETIFIER
cell

 142   PUNCTUATION
(

 143   INTEGER
0

 144   PUNCTUATION
)

 145   KEYWORD
else

 146   OBJECT_INDETIFIER
cell

 147   PUNCTUATION
(

 148   OBJECT_INDETIFIER
position

 149   OPERATOR
+

 150   INTEGER
1

 151   PUNCTUATION
)

 152   KEYWORD
fi

 153   PUNCTUATION
}

 154   PUNCTUATION
;

 155   ERROR
EOF in comment

